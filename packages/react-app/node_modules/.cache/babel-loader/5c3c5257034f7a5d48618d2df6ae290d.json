{"ast":null,"code":"var _jsxFileName = \"/home/nico/Code/ongoing/42NFTs/packages/react-app/src/App.jsx\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport { JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\nimport \"./App.css\";\nimport { Row, Col, Button, Menu, Alert, Input, List, Card, Switch as SwitchD } from \"antd\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { useUserAddress } from \"eth-hooks\";\nimport { useExchangePrice, useGasPrice, useUserProvider, useContractLoader, useContractReader, useEventListener, useBalance, useExternalContractLoader } from \"./hooks\";\nimport { Header, Account, Faucet, Ramp, Contract, GasGauge, Address, AddressInput, ThemeSwitch } from \"./components\";\nimport { Transactor } from \"./helpers\";\nimport { formatEther, parseEther } from \"@ethersproject/units\"; //import Hints from \"./Hints\";\n\nimport { Hints, ExampleUI, Subgraph } from \"./views\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport { INFURA_ID, DAI_ADDRESS, DAI_ABI, NETWORK, NETWORKS } from \"./constants\";\nimport ReactJson from 'react-json-view';\n\nconst {\n  BufferList\n} = require('bl'); // https://www.npmjs.com/package/ipfs-http-client\n\n\nconst ipfsAPI = require('ipfs-http-client');\n\nconst ipfs = ipfsAPI({\n  host: 'ipfs.infura.io',\n  port: '5001',\n  protocol: 'https'\n});\n/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/austintgriffith/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n/// üì° What chain are your contracts deployed to?\n\nconst targetNetwork = NETWORKS['localhost']; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n// üò¨ Sorry for all the console logging\n\nconst DEBUG = true; //EXAMPLE STARTING JSON:\n\nconst STARTING_JSON = {\n  \"description\": \"It's actually a bison?\",\n  \"external_url\": \"https://austingriffith.com/portfolio/paintings/\",\n  // <-- this can link to a page for the specific file too\n  \"image\": \"https://austingriffith.com/images/paintings/buffalo.jpg\",\n  \"name\": \"Buffalo\",\n  \"attributes\": [{\n    \"trait_type\": \"BackgroundColor\",\n    \"value\": \"green\"\n  }, {\n    \"trait_type\": \"Eyes\",\n    \"value\": \"googly\"\n  }]\n}; //helper function to \"Get\" from IPFS\n// you usually go content.toString() after this...\n\nconst getFromIPFS = async hashToGet => {\n  for await (const file of ipfs.get(hashToGet)) {\n    console.log(file.path);\n    if (!file.content) continue;\n    const content = new BufferList();\n\n    for await (const chunk of file.content) {\n      content.append(chunk);\n    }\n\n    console.log(content);\n    return content;\n  }\n}; // üõ∞ providers\n\n\nif (DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\"); // const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\n\nconst scaffoldEthProvider = new JsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\");\nconst mainnetInfura = new JsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID); // ( ‚ö†Ô∏è Getting \"failed to meet quorum\" errors? Check your INFURA_I\n// üè† Your local provider is usually pointed at your local blockchain\n\nconst localProviderUrl = targetNetwork.rpcUrl; // as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\n\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif (DEBUG) console.log(\"üè† Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new JsonRpcProvider(localProviderUrlFromEnv); // üî≠ block explorer URL\n\nconst blockExplorer = targetNetwork.blockExplorer;\n\nfunction App(props) {\n  const mainnetProvider = scaffoldEthProvider && scaffoldEthProvider._network ? scaffoldEthProvider : mainnetInfura;\n  if (DEBUG) console.log(\"üåé mainnetProvider\", mainnetProvider);\n  const [injectedProvider, setInjectedProvider] = useState();\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n\n  const price = useExchangePrice(targetNetwork, mainnetProvider);\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n\n  const gasPrice = useGasPrice(targetNetwork, \"fast\"); // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n\n  const userProvider = useUserProvider(injectedProvider, localProvider);\n  const address = useUserAddress(userProvider);\n  if (DEBUG) console.log(\"üë©‚Äçüíº selected address:\", address); // You can warn the user if you would like them to be on a specific network\n\n  let localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  if (DEBUG) console.log(\"üè† localChainId\", localChainId);\n  let selectedChainId = userProvider && userProvider._network && userProvider._network.chainId;\n  if (DEBUG) console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\", selectedChainId); // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n  // The transactor wraps transactions and provides notificiations\n\n  const tx = Transactor(userProvider, gasPrice); // Faucet Tx can be used to send funds from the faucet\n\n  const faucetTx = Transactor(localProvider, gasPrice); // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n\n  const yourLocalBalance = useBalance(localProvider, address);\n  if (DEBUG) console.log(\"üíµ yourLocalBalance\", yourLocalBalance ? formatEther(yourLocalBalance) : \"...\"); // Just plug in different üõ∞ providers to get your balance on different chains:\n\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n  if (DEBUG) console.log(\"üíµ yourMainnetBalance\", yourMainnetBalance ? formatEther(yourMainnetBalance) : \"...\"); // Load in your local üìù contract and read a value from it:\n\n  const readContracts = useContractLoader(localProvider);\n  if (DEBUG) console.log(\"üìù readContracts\", readContracts); // If you want to make üîê write transactions to your contracts, use the userProvider:\n\n  const writeContracts = useContractLoader(userProvider);\n  if (DEBUG) console.log(\"üîê writeContracts\", writeContracts); // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n\n  const mainnetDAIContract = useExternalContractLoader(mainnetProvider, DAI_ADDRESS, DAI_ABI);\n  console.log(\"üåç DAI contract on mainnet:\", mainnetDAIContract); //\n  // Then read your DAI balance like:\n\n  const myMainnetDAIBalance = useContractReader({\n    DAI: mainnetDAIContract\n  }, \"DAI\", \"balanceOf\", [\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"]);\n  console.log(\"ü•á myMainnetDAIBalance:\", myMainnetDAIBalance); // keep track of a variable from the contract in the local React state:\n\n  const balance = useContractReader(readContracts, \"YourCollectible\", \"balanceOf\", [address]);\n  console.log(\"ü§ó balance:\", balance); //üìü Listen for broadcast events\n\n  const transferEvents = useEventListener(readContracts, \"YourCollectible\", \"Transfer\", localProvider, 1);\n  console.log(\"üìü Transfer events:\", transferEvents); //\n  // üß† This effect will update yourCollectibles by polling when your balance changes\n  //\n\n  const yourBalance = balance && balance.toNumber && balance.toNumber();\n  const [yourCollectibles, setYourCollectibles] = useState();\n  useEffect(() => {\n    const updateYourCollectibles = async () => {\n      let collectibleUpdate = [];\n\n      for (let tokenIndex = 0; tokenIndex < balance; tokenIndex++) {\n        try {\n          console.log(\"GEtting token index\", tokenIndex);\n          const tokenId = await readContracts.YourCollectible.tokenOfOwnerByIndex(address, tokenIndex);\n          console.log(\"tokenId\", tokenId);\n          const tokenURI = await readContracts.YourCollectible.tokenURI(tokenId);\n          console.log(\"tokenURI\", tokenURI);\n          const ipfsHash = tokenURI.replace(\"https://ipfs.io/ipfs/\", \"\");\n          console.log(\"ipfsHash\", ipfsHash);\n          const jsonManifestBuffer = await getFromIPFS(ipfsHash);\n\n          try {\n            const jsonManifest = JSON.parse(jsonManifestBuffer.toString());\n            console.log(\"jsonManifest\", jsonManifest);\n            collectibleUpdate.push({\n              id: tokenId,\n              uri: tokenURI,\n              owner: address,\n              ...jsonManifest\n            });\n          } catch (e) {\n            console.log(e);\n          }\n        } catch (e) {\n          console.log(e);\n        }\n      }\n\n      setYourCollectibles(collectibleUpdate);\n    };\n\n    updateYourCollectibles();\n  }, [address, yourBalance]);\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\n  */\n\n  let networkDisplay = \"\";\n\n  if (localChainId && selectedChainId && localChainId != selectedChainId) {\n    networkDisplay = /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        zIndex: 2,\n        position: 'absolute',\n        right: 0,\n        top: 60,\n        padding: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      message: \"‚ö†Ô∏è Wrong Network\",\n      description: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }\n      }, \"You have \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 24\n        }\n      }, NETWORK(selectedChainId).name), \" selected and you need to be on \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 94\n        }\n      }, NETWORK(localChainId).name), \".\"),\n      type: \"error\",\n      closable: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    networkDisplay = /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        zIndex: -1,\n        position: 'absolute',\n        right: 154,\n        top: 28,\n        padding: 16,\n        color: targetNetwork.color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 7\n      }\n    }, targetNetwork.name);\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new Web3Provider(provider));\n  }, [setInjectedProvider]);\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, [setRoute]);\n  let faucetHint = \"\";\n  const faucetAvailable = localProvider && localProvider.connection && localProvider.connection.url && localProvider.connection.url.indexOf(window.location.hostname) >= 0 && !process.env.REACT_APP_PROVIDER && price > 1;\n  const [faucetClicked, setFaucetClicked] = useState(false);\n\n  if (!faucetClicked && localProvider && localProvider._network && localProvider._network.chainId == 31337 && yourLocalBalance && formatEther(yourLocalBalance) <= 0) {\n    faucetHint = /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: 16\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => {\n        faucetTx({\n          to: address,\n          value: parseEther(\"0.01\")\n        });\n        setFaucetClicked(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }\n    }, \"\\uD83D\\uDCB0 Grab funds from the faucet \\u26FD\\uFE0F\"));\n  }\n\n  const [yourJSON, setYourJSON] = useState(STARTING_JSON);\n  const [sending, setSending] = useState();\n  const [ipfsHash, setIpfsHash] = useState();\n  const [ipfsDownHash, setIpfsDownHash] = useState();\n  const [downloading, setDownloading] = useState();\n  const [ipfsContent, setIpfsContent] = useState();\n  const [transferToAddresses, setTransferToAddresses] = useState({});\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }\n  }), networkDisplay, /*#__PURE__*/React.createElement(BrowserRouter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    style: {\n      textAlign: \"center\"\n    },\n    selectedKeys: [route],\n    mode: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/\");\n    },\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }\n  }, \"YourCollectibles\")), /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/transfers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/transfers\");\n    },\n    to: \"/transfers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  }, \"Transfers\")), /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/ipfsup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/ipfsup\");\n    },\n    to: \"/ipfsup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }\n  }, \"IPFS Upload\")), /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/ipfsdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/ipfsdown\");\n    },\n    to: \"/ipfsdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }\n  }, \"IPFS Download\")), /*#__PURE__*/React.createElement(Menu.Item, {\n    key: \"/debugcontracts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => {\n      setRoute(\"/debugcontracts\");\n    },\n    to: \"/debugcontracts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }\n  }, \"Debug Contracts\"))), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 640,\n      margin: \"auto\",\n      marginTop: 32,\n      paddingBottom: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    bordered: true,\n    dataSource: yourCollectibles,\n    renderItem: item => {\n      const id = item.id.toNumber();\n      return /*#__PURE__*/React.createElement(List.Item, {\n        key: id + \"_\" + item.uri + \"_\" + item.owner,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        title: /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontSize: 16,\n            marginRight: 8\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 27\n          }\n        }, \"#\", id), \" \", item.name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: item.image,\n        style: {\n          maxWidth: 150\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 28\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 23\n        }\n      }, item.description)), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 23\n        }\n      }, \"owner: \", /*#__PURE__*/React.createElement(Address, {\n        address: item.owner,\n        ensProvider: mainnetProvider,\n        blockExplorer: blockExplorer,\n        fontSize: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 32\n        }\n      }), /*#__PURE__*/React.createElement(AddressInput, {\n        ensProvider: mainnetProvider,\n        placeholder: \"transfer to address\",\n        value: transferToAddresses[id],\n        onChange: newValue => {\n          let update = {};\n          update[id] = newValue;\n          setTransferToAddresses({ ...transferToAddresses,\n            ...update\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => {\n          console.log(\"writeContracts\", writeContracts);\n          tx(writeContracts.YourCollectible.transferFrom(address, transferToAddresses[id], id));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 25\n        }\n      }, \"Transfer\")));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Route, {\n    path: \"/transfers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: 600,\n      margin: \"auto\",\n      marginTop: 32,\n      paddingBottom: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    bordered: true,\n    dataSource: transferEvents,\n    renderItem: item => {\n      return /*#__PURE__*/React.createElement(List.Item, {\n        key: item[0] + \"_\" + item[1] + \"_\" + item.blockNumber + \"_\" + item[2].toNumber(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontSize: 16,\n          marginRight: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 23\n        }\n      }, \"#\", item[2].toNumber()), /*#__PURE__*/React.createElement(Address, {\n        address: item[0],\n        ensProvider: mainnetProvider,\n        fontSize: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 23\n        }\n      }), \" =>\", /*#__PURE__*/React.createElement(Address, {\n        address: item[1],\n        ensProvider: mainnetProvider,\n        fontSize: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 23\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Route, {\n    path: \"/ipfsup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: 32,\n      width: 740,\n      margin: \"auto\",\n      textAlign: \"left\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReactJson, {\n    style: {\n      padding: 8\n    },\n    src: yourJSON,\n    theme: \"pop\",\n    enableClipboard: false,\n    onEdit: (edit, a) => {\n      setYourJSON(edit.updated_src);\n    },\n    onAdd: (add, a) => {\n      setYourJSON(add.updated_src);\n    },\n    onDelete: (del, a) => {\n      setYourJSON(del.updated_src);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      margin: 8\n    },\n    loading: sending,\n    size: \"large\",\n    shape: \"round\",\n    type: \"primary\",\n    onClick: async () => {\n      console.log(\"UPLOADING...\", yourJSON);\n      setSending(true);\n      setIpfsHash();\n      const result = await ipfs.add(JSON.stringify(yourJSON)); //addToIPFS(JSON.stringify(yourJSON))\n\n      if (result && result.path) {\n        setIpfsHash(result.path);\n      }\n\n      setSending(false);\n      console.log(\"RESULT:\", result);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 13\n    }\n  }, \"Upload to IPFS\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 16,\n      paddingBottom: 150\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 13\n    }\n  }, ipfsHash)), /*#__PURE__*/React.createElement(Route, {\n    path: \"/ipfsdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: 32,\n      width: 740,\n      margin: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    value: ipfsDownHash,\n    placeHolder: \"IPFS hash (like QmadqNw8zkdrrwdtPFK1pLi8PPxmkQ4pDJXY8ozHtz6tZq)\",\n    onChange: e => {\n      setIpfsDownHash(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      margin: 8\n    },\n    loading: sending,\n    size: \"large\",\n    shape: \"round\",\n    type: \"primary\",\n    onClick: async () => {\n      console.log(\"DOWNLOADING...\", ipfsDownHash);\n      setDownloading(true);\n      setIpfsContent();\n      const result = await getFromIPFS(ipfsDownHash); //addToIPFS(JSON.stringify(yourJSON))\n\n      if (result && result.toString) {\n        setIpfsContent(result.toString());\n      }\n\n      setDownloading(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 15\n    }\n  }, \"Download from IPFS\"), /*#__PURE__*/React.createElement(\"pre\", {\n    style: {\n      padding: 16,\n      width: 500,\n      margin: \"auto\",\n      paddingBottom: 150\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 15\n    }\n  }, ipfsContent)), /*#__PURE__*/React.createElement(Route, {\n    path: \"/debugcontracts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Contract, {\n    name: \"YourCollectible\",\n    signer: userProvider.getSigner(),\n    provider: localProvider,\n    address: address,\n    blockExplorer: blockExplorer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(ThemeSwitch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      textAlign: \"right\",\n      right: 0,\n      top: 0,\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Account, {\n    address: address,\n    localProvider: localProvider,\n    userProvider: userProvider,\n    mainnetProvider: mainnetProvider,\n    price: price,\n    web3Modal: web3Modal,\n    loadWeb3Modal: loadWeb3Modal,\n    logoutOfWeb3Modal: logoutOfWeb3Modal,\n    blockExplorer: blockExplorer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 10\n    }\n  }), faucetHint), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: \"fixed\",\n      textAlign: \"left\",\n      left: 0,\n      bottom: 20,\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    gutter: [4, 4],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Ramp, {\n    price: price,\n    address: address,\n    networks: NETWORKS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 14\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    style: {\n      textAlign: \"center\",\n      opacity: 0.8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(GasGauge, {\n    gasPrice: gasPrice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 14\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    style: {\n      textAlign: \"center\",\n      opacity: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n    },\n    size: \"large\",\n    shape: \"round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginRight: 8\n    },\n    role: \"img\",\n    \"aria-label\": \"support\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 16\n    }\n  }, \"\\uD83D\\uDCAC\"), \"Support\"))), /*#__PURE__*/React.createElement(Row, {\n    align: \"middle\",\n    gutter: [4, 4],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 12\n    }\n  },\n  /*  if the local provider has a signer, let's show the faucet:  */\n  faucetAvailable ? /*#__PURE__*/React.createElement(Faucet, {\n    localProvider: localProvider,\n    price: price,\n    ensProvider: mainnetProvider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 18\n    }\n  }) : \"\"))));\n}\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\n\n\nconst web3Modal = new Web3Modal({\n  // network: \"mainnet\", // optional\n  cacheProvider: true,\n  // optional\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      // required\n      options: {\n        infuraId: INFURA_ID\n      }\n    }\n  }\n});\n\nconst logoutOfWeb3Modal = async () => {\n  await web3Modal.clearCachedProvider();\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n};\n\nwindow.ethereum && window.ethereum.on('chainChanged', chainId => {\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n});\nexport default App;","map":{"version":3,"sources":["/home/nico/Code/ongoing/42NFTs/packages/react-app/src/App.jsx"],"names":["React","useCallback","useEffect","useState","BrowserRouter","Switch","Route","Link","JsonRpcProvider","Web3Provider","Row","Col","Button","Menu","Alert","Input","List","Card","SwitchD","Web3Modal","WalletConnectProvider","useUserAddress","useExchangePrice","useGasPrice","useUserProvider","useContractLoader","useContractReader","useEventListener","useBalance","useExternalContractLoader","Header","Account","Faucet","Ramp","Contract","GasGauge","Address","AddressInput","ThemeSwitch","Transactor","formatEther","parseEther","Hints","ExampleUI","Subgraph","useThemeSwitcher","INFURA_ID","DAI_ADDRESS","DAI_ABI","NETWORK","NETWORKS","ReactJson","BufferList","require","ipfsAPI","ipfs","host","port","protocol","targetNetwork","DEBUG","STARTING_JSON","getFromIPFS","hashToGet","file","get","console","log","path","content","chunk","append","scaffoldEthProvider","mainnetInfura","localProviderUrl","rpcUrl","localProviderUrlFromEnv","process","env","REACT_APP_PROVIDER","localProvider","blockExplorer","App","props","mainnetProvider","_network","injectedProvider","setInjectedProvider","price","gasPrice","userProvider","address","localChainId","chainId","selectedChainId","tx","faucetTx","yourLocalBalance","yourMainnetBalance","readContracts","writeContracts","mainnetDAIContract","myMainnetDAIBalance","DAI","balance","transferEvents","yourBalance","toNumber","yourCollectibles","setYourCollectibles","updateYourCollectibles","collectibleUpdate","tokenIndex","tokenId","YourCollectible","tokenOfOwnerByIndex","tokenURI","ipfsHash","replace","jsonManifestBuffer","jsonManifest","JSON","parse","toString","push","id","uri","owner","e","networkDisplay","zIndex","position","right","top","padding","name","color","loadWeb3Modal","provider","web3Modal","connect","cachedProvider","route","setRoute","window","location","pathname","faucetHint","faucetAvailable","connection","url","indexOf","hostname","faucetClicked","setFaucetClicked","to","value","yourJSON","setYourJSON","sending","setSending","setIpfsHash","ipfsDownHash","setIpfsDownHash","downloading","setDownloading","ipfsContent","setIpfsContent","transferToAddresses","setTransferToAddresses","textAlign","width","margin","marginTop","paddingBottom","item","fontSize","marginRight","image","maxWidth","description","newValue","update","transferFrom","blockNumber","paddingTop","edit","a","updated_src","add","del","result","stringify","target","getSigner","logoutOfWeb3Modal","left","bottom","opacity","open","cacheProvider","providerOptions","walletconnect","package","options","infuraId","clearCachedProvider","setTimeout","reload","ethereum","on"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport {  JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\nimport \"./App.css\";\nimport { Row, Col, Button, Menu, Alert, Input, List, Card, Switch as SwitchD } from \"antd\";\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { useUserAddress } from \"eth-hooks\";\nimport { useExchangePrice, useGasPrice, useUserProvider, useContractLoader, useContractReader, useEventListener, useBalance, useExternalContractLoader } from \"./hooks\";\nimport { Header, Account, Faucet, Ramp, Contract, GasGauge, Address, AddressInput, ThemeSwitch } from \"./components\";\nimport { Transactor } from \"./helpers\";\nimport { formatEther, parseEther } from \"@ethersproject/units\";\n//import Hints from \"./Hints\";\nimport { Hints, ExampleUI, Subgraph } from \"./views\"\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport { INFURA_ID, DAI_ADDRESS, DAI_ABI, NETWORK, NETWORKS } from \"./constants\";\nimport ReactJson from 'react-json-view'\nconst { BufferList } = require('bl')\n// https://www.npmjs.com/package/ipfs-http-client\nconst ipfsAPI = require('ipfs-http-client');\nconst ipfs = ipfsAPI({host: 'ipfs.infura.io', port: '5001', protocol: 'https' })\n/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/austintgriffith/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n\n\n/// üì° What chain are your contracts deployed to?\nconst targetNetwork = NETWORKS['localhost']; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n\n// üò¨ Sorry for all the console logging\nconst DEBUG = true\n\n//EXAMPLE STARTING JSON:\nconst STARTING_JSON = {\n  \"description\": \"It's actually a bison?\",\n  \"external_url\": \"https://austingriffith.com/portfolio/paintings/\",// <-- this can link to a page for the specific file too\n  \"image\": \"https://austingriffith.com/images/paintings/buffalo.jpg\",\n  \"name\": \"Buffalo\",\n  \"attributes\": [\n     {\n       \"trait_type\": \"BackgroundColor\",\n       \"value\": \"green\"\n     },\n     {\n       \"trait_type\": \"Eyes\",\n       \"value\": \"googly\"\n     }\n  ]\n}\n\n//helper function to \"Get\" from IPFS\n// you usually go content.toString() after this...\nconst getFromIPFS = async hashToGet => {\n  for await (const file of ipfs.get(hashToGet)) {\n    console.log(file.path)\n    if (!file.content) continue;\n    const content = new BufferList()\n    for await (const chunk of file.content) {\n      content.append(chunk)\n    }\n    console.log(content)\n    return content\n  }\n}\n\n// üõ∞ providers\nif(DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\");\n// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\nconst scaffoldEthProvider = new JsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\")\nconst mainnetInfura = new JsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID)\n// ( ‚ö†Ô∏è Getting \"failed to meet quorum\" errors? Check your INFURA_I\n\n// üè† Your local provider is usually pointed at your local blockchain\nconst localProviderUrl = targetNetwork.rpcUrl;\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif(DEBUG) console.log(\"üè† Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new JsonRpcProvider(localProviderUrlFromEnv);\n\n\n// üî≠ block explorer URL\nconst blockExplorer = targetNetwork.blockExplorer;\n\n\nfunction App(props) {\n\n  const mainnetProvider = (scaffoldEthProvider && scaffoldEthProvider._network) ? scaffoldEthProvider : mainnetInfura\n  if(DEBUG) console.log(\"üåé mainnetProvider\",mainnetProvider)\n\n  const [injectedProvider, setInjectedProvider] = useState();\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n  const price = useExchangePrice(targetNetwork,mainnetProvider);\n\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n  const gasPrice = useGasPrice(targetNetwork,\"fast\");\n  // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n  const userProvider = useUserProvider(injectedProvider, localProvider);\n  const address = useUserAddress(userProvider);\n  if(DEBUG) console.log(\"üë©‚Äçüíº selected address:\",address)\n\n  // You can warn the user if you would like them to be on a specific network\n  let localChainId = localProvider && localProvider._network && localProvider._network.chainId\n  if(DEBUG) console.log(\"üè† localChainId\",localChainId)\n\n  let selectedChainId = userProvider && userProvider._network && userProvider._network.chainId\n  if(DEBUG) console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\",selectedChainId)\n\n  // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userProvider, gasPrice)\n\n  // Faucet Tx can be used to send funds from the faucet\n  const faucetTx = Transactor(localProvider, gasPrice)\n\n  // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address);\n  if(DEBUG) console.log(\"üíµ yourLocalBalance\",yourLocalBalance?formatEther(yourLocalBalance):\"...\")\n\n  // Just plug in different üõ∞ providers to get your balance on different chains:\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n  if(DEBUG) console.log(\"üíµ yourMainnetBalance\",yourMainnetBalance?formatEther(yourMainnetBalance):\"...\")\n\n  // Load in your local üìù contract and read a value from it:\n  const readContracts = useContractLoader(localProvider)\n  if(DEBUG) console.log(\"üìù readContracts\",readContracts)\n\n  // If you want to make üîê write transactions to your contracts, use the userProvider:\n  const writeContracts = useContractLoader(userProvider)\n  if(DEBUG) console.log(\"üîê writeContracts\",writeContracts)\n\n  // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n  const mainnetDAIContract = useExternalContractLoader(mainnetProvider, DAI_ADDRESS, DAI_ABI)\n  console.log(\"üåç DAI contract on mainnet:\",mainnetDAIContract)\n  //\n  // Then read your DAI balance like:\n  const myMainnetDAIBalance = useContractReader({DAI: mainnetDAIContract},\"DAI\", \"balanceOf\",[\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"])\n  console.log(\"ü•á myMainnetDAIBalance:\",myMainnetDAIBalance)\n\n\n  // keep track of a variable from the contract in the local React state:\n  const balance = useContractReader(readContracts,\"YourCollectible\", \"balanceOf\", [ address ])\n  console.log(\"ü§ó balance:\",balance)\n\n  //üìü Listen for broadcast events\n  const transferEvents = useEventListener(readContracts, \"YourCollectible\", \"Transfer\", localProvider, 1);\n  console.log(\"üìü Transfer events:\",transferEvents)\n\n\n\n  //\n  // üß† This effect will update yourCollectibles by polling when your balance changes\n  //\n  const yourBalance = balance && balance.toNumber && balance.toNumber()\n  const [ yourCollectibles, setYourCollectibles ] = useState()\n\n  useEffect(()=>{\n    const updateYourCollectibles = async () => {\n      let collectibleUpdate = []\n      for(let tokenIndex=0;tokenIndex<balance;tokenIndex++){\n        try{\n          console.log(\"GEtting token index\",tokenIndex)\n          const tokenId = await readContracts.YourCollectible.tokenOfOwnerByIndex(address, tokenIndex)\n          console.log(\"tokenId\",tokenId)\n          const tokenURI = await readContracts.YourCollectible.tokenURI(tokenId)\n          console.log(\"tokenURI\",tokenURI)\n\n          const ipfsHash =  tokenURI.replace(\"https://ipfs.io/ipfs/\",\"\")\n          console.log(\"ipfsHash\",ipfsHash)\n\n          const jsonManifestBuffer = await getFromIPFS(ipfsHash)\n\n          try{\n            const jsonManifest = JSON.parse(jsonManifestBuffer.toString())\n            console.log(\"jsonManifest\",jsonManifest)\n            collectibleUpdate.push({ id:tokenId, uri:tokenURI, owner: address, ...jsonManifest })\n          }catch(e){console.log(e)}\n\n        }catch(e){console.log(e)}\n      }\n      setYourCollectibles(collectibleUpdate)\n    }\n    updateYourCollectibles()\n  },[ address, yourBalance ])\n\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\n  */\n\n\n  let networkDisplay = \"\"\n  if(localChainId && selectedChainId && localChainId != selectedChainId ){\n    networkDisplay = (\n      <div style={{zIndex:2, position:'absolute', right:0,top:60,padding:16}}>\n        <Alert\n          message={\"‚ö†Ô∏è Wrong Network\"}\n          description={(\n            <div>\n              You have <b>{NETWORK(selectedChainId).name}</b> selected and you need to be on <b>{NETWORK(localChainId).name}</b>.\n            </div>\n          )}\n          type=\"error\"\n          closable={false}\n        />\n      </div>\n    )\n  }else{\n    networkDisplay = (\n      <div style={{zIndex:-1, position:'absolute', right:154,top:28,padding:16,color:targetNetwork.color}}>\n        {targetNetwork.name}\n      </div>\n    )\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new Web3Provider(provider));\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname)\n  }, [setRoute]);\n\n  let faucetHint = \"\"\n  const faucetAvailable = localProvider && localProvider.connection && localProvider.connection.url && localProvider.connection.url.indexOf(window.location.hostname)>=0 && !process.env.REACT_APP_PROVIDER && price > 1;\n\n  const [ faucetClicked, setFaucetClicked ] = useState( false );\n  if(!faucetClicked&&localProvider&&localProvider._network&&localProvider._network.chainId==31337&&yourLocalBalance&&formatEther(yourLocalBalance)<=0){\n    faucetHint = (\n      <div style={{padding:16}}>\n        <Button type={\"primary\"} onClick={()=>{\n          faucetTx({\n            to: address,\n            value: parseEther(\"0.01\"),\n          });\n          setFaucetClicked(true)\n        }}>\n          üí∞ Grab funds from the faucet ‚õΩÔ∏è\n        </Button>\n      </div>\n    )\n  }\n\n\n  const [ yourJSON, setYourJSON ] = useState( STARTING_JSON );\n  const [ sending, setSending ] = useState()\n  const [ ipfsHash, setIpfsHash ] = useState()\n  const [ ipfsDownHash, setIpfsDownHash ] = useState()\n\n  const [ downloading, setDownloading ] = useState()\n  const [ ipfsContent, setIpfsContent ] = useState()\n\n  const [ transferToAddresses, setTransferToAddresses ] = useState({})\n\n  return (\n    <div className=\"App\">\n\n      {/* ‚úèÔ∏è Edit the header and change the title to your project name */}\n      <Header />\n      {networkDisplay}\n      <BrowserRouter>\n\n        <Menu style={{ textAlign:\"center\" }} selectedKeys={[route]} mode=\"horizontal\">\n          <Menu.Item key=\"/\">\n            <Link onClick={()=>{setRoute(\"/\")}} to=\"/\">YourCollectibles</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/transfers\">\n            <Link onClick={()=>{setRoute(\"/transfers\")}} to=\"/transfers\">Transfers</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/ipfsup\">\n            <Link onClick={()=>{setRoute(\"/ipfsup\")}} to=\"/ipfsup\">IPFS Upload</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/ipfsdown\">\n            <Link onClick={()=>{setRoute(\"/ipfsdown\")}} to=\"/ipfsdown\">IPFS Download</Link>\n          </Menu.Item>\n          <Menu.Item key=\"/debugcontracts\">\n            <Link onClick={()=>{setRoute(\"/debugcontracts\")}} to=\"/debugcontracts\">Debug Contracts</Link>\n          </Menu.Item>\n        </Menu>\n\n        <Switch>\n          <Route exact path=\"/\">\n            {/*\n                üéõ this scaffolding is full of commonly used components\n                this <Contract/> component will automatically parse your ABI\n                and give you a form to interact with it locally\n            */}\n\n            <div style={{ width:640, margin: \"auto\", marginTop:32, paddingBottom:32 }}>\n              <List\n                bordered\n                dataSource={yourCollectibles}\n                renderItem={(item) => {\n                  const id = item.id.toNumber()\n                  return (\n                    <List.Item key={id+\"_\"+item.uri+\"_\"+item.owner}>\n\n                      <Card title={(\n                        <div>\n                          <span style={{fontSize:16, marginRight:8}}>#{id}</span> {item.name}\n                        </div>\n                      )}>\n                      <div><img src={item.image} style={{maxWidth:150}} /></div>\n                      <div>{item.description}</div>\n                      </Card>\n\n                      <div>\n                        owner: <Address\n                            address={item.owner}\n                            ensProvider={mainnetProvider}\n                            blockExplorer={blockExplorer}\n                            fontSize={16}\n                        />\n                        <AddressInput\n                          ensProvider={mainnetProvider}\n                          placeholder=\"transfer to address\"\n                          value={transferToAddresses[id]}\n                          onChange={(newValue)=>{\n                            let update = {}\n                            update[id] = newValue\n                            setTransferToAddresses({ ...transferToAddresses, ...update})\n                          }}\n                        />\n                        <Button onClick={()=>{\n                          console.log(\"writeContracts\",writeContracts)\n                          tx( writeContracts.YourCollectible.transferFrom(address, transferToAddresses[id], id) )\n                        }}>\n                          Transfer\n                        </Button>\n                      </div>\n                    </List.Item>\n                  )\n                }}\n              />\n            </div>\n\n          </Route>\n\n          <Route path=\"/transfers\">\n            <div style={{ width:600, margin: \"auto\", marginTop:32, paddingBottom:32 }}>\n              <List\n                bordered\n                dataSource={transferEvents}\n                renderItem={(item) => {\n                  return (\n                    <List.Item key={item[0]+\"_\"+item[1]+\"_\"+item.blockNumber+\"_\"+item[2].toNumber()}>\n                      <span style={{fontSize:16, marginRight:8}}>#{item[2].toNumber()}</span>\n                      <Address\n                          address={item[0]}\n                          ensProvider={mainnetProvider}\n                          fontSize={16}\n                      /> =>\n                      <Address\n                          address={item[1]}\n                          ensProvider={mainnetProvider}\n                          fontSize={16}\n                      />\n                    </List.Item>\n                  )\n                }}\n              />\n            </div>\n          </Route>\n\n          <Route path=\"/ipfsup\">\n            <div style={{ paddingTop:32, width:740, margin:\"auto\", textAlign:\"left\" }}>\n              <ReactJson\n                style={{ padding:8 }}\n                src={yourJSON}\n                theme={\"pop\"}\n                enableClipboard={false}\n                onEdit={(edit,a)=>{\n                  setYourJSON(edit.updated_src)\n                }}\n                onAdd={(add,a)=>{\n                  setYourJSON(add.updated_src)\n                }}\n                onDelete={(del,a)=>{\n                  setYourJSON(del.updated_src)\n                }}\n              />\n            </div>\n\n            <Button style={{margin:8}} loading={sending} size=\"large\" shape=\"round\" type=\"primary\" onClick={async()=>{\n                console.log(\"UPLOADING...\",yourJSON)\n                setSending(true)\n                setIpfsHash()\n                const result = await ipfs.add(JSON.stringify(yourJSON))//addToIPFS(JSON.stringify(yourJSON))\n                if(result && result.path) {\n                  setIpfsHash(result.path)\n                }\n                setSending(false)\n                console.log(\"RESULT:\",result)\n            }}>Upload to IPFS</Button>\n\n            <div  style={{padding:16,paddingBottom:150}}>\n              {ipfsHash}\n            </div>\n\n          </Route>\n          <Route path=\"/ipfsdown\">\n              <div style={{ paddingTop:32, width:740, margin:\"auto\" }}>\n                <Input\n                  value={ipfsDownHash}\n                  placeHolder={\"IPFS hash (like QmadqNw8zkdrrwdtPFK1pLi8PPxmkQ4pDJXY8ozHtz6tZq)\"}\n                  onChange={(e)=>{\n                    setIpfsDownHash(e.target.value)\n                  }}\n                />\n              </div>\n              <Button style={{margin:8}} loading={sending} size=\"large\" shape=\"round\" type=\"primary\" onClick={async()=>{\n                  console.log(\"DOWNLOADING...\",ipfsDownHash)\n                  setDownloading(true)\n                  setIpfsContent()\n                  const result = await getFromIPFS(ipfsDownHash)//addToIPFS(JSON.stringify(yourJSON))\n                  if(result && result.toString) {\n                    setIpfsContent(result.toString())\n                  }\n                  setDownloading(false)\n              }}>Download from IPFS</Button>\n\n              <pre  style={{padding:16, width:500, margin:\"auto\",paddingBottom:150}}>\n                {ipfsContent}\n              </pre>\n          </Route>\n          <Route path=\"/debugcontracts\">\n              <Contract\n                name=\"YourCollectible\"\n                signer={userProvider.getSigner()}\n                provider={localProvider}\n                address={address}\n                blockExplorer={blockExplorer}\n              />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n\n      <ThemeSwitch />\n\n\n      {/* üë®‚Äçüíº Your account is in the top right with a wallet at connect options */}\n      <div style={{ position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\n         <Account\n           address={address}\n           localProvider={localProvider}\n           userProvider={userProvider}\n           mainnetProvider={mainnetProvider}\n           price={price}\n           web3Modal={web3Modal}\n           loadWeb3Modal={loadWeb3Modal}\n           logoutOfWeb3Modal={logoutOfWeb3Modal}\n           blockExplorer={blockExplorer}\n         />\n         {faucetHint}\n      </div>\n\n      {/* üó∫ Extra UI like gas price, eth price, faucet, and support: */}\n       <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\n         <Row align=\"middle\" gutter={[4, 4]}>\n           <Col span={8}>\n             <Ramp price={price} address={address} networks={NETWORKS}/>\n           </Col>\n\n           <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\n             <GasGauge gasPrice={gasPrice} />\n           </Col>\n           <Col span={8} style={{ textAlign: \"center\", opacity: 1 }}>\n             <Button\n               onClick={() => {\n                 window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n               }}\n               size=\"large\"\n               shape=\"round\"\n             >\n               <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\n                 üí¨\n               </span>\n               Support\n             </Button>\n           </Col>\n         </Row>\n\n         <Row align=\"middle\" gutter={[4, 4]}>\n           <Col span={24}>\n             {\n               /*  if the local provider has a signer, let's show the faucet:  */\n               faucetAvailable ? (\n                 <Faucet localProvider={localProvider} price={price} ensProvider={mainnetProvider}/>\n               ) : (\n                 \"\"\n               )\n             }\n           </Col>\n         </Row>\n       </div>\n\n    </div>\n  );\n}\n\n\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\nconst web3Modal = new Web3Modal({\n  // network: \"mainnet\", // optional\n  cacheProvider: true, // optional\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        infuraId: INFURA_ID,\n      },\n    },\n  },\n});\n\nconst logoutOfWeb3Modal = async () => {\n  await web3Modal.clearCachedProvider();\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n};\n\n window.ethereum && window.ethereum.on('chainChanged', chainId => {\n  setTimeout(() => {\n    window.location.reload();\n  }, 1);\n})\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}